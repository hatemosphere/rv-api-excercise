---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: api-users
  name: api-users
  namespace: api-users
spec:
  type: LoadBalancer
  selector:
    app: api-users
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: api-users
  name: api-users
  namespace: api-users
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: api-users
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-users
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: api-config
        image: hatemospher3/rv-api-excercise:0.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        name: api-users
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 125m
            memory: 64Mi
          limits:
            memory: 64Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: api-users
  name: api-users
  namespace: api-users
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: api-users
